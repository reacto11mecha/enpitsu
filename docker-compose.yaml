services:
  db:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "enpitsu", "-d", "enpitsu"]
      interval: 3s
      retries: 10
      start_period: 30s
    environment:
      POSTGRES_DB: enpitsu
      POSTGRES_USER: enpitsu
      POSTGRES_PASSWORD: enpitsu
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  cache:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass enpitsu
    volumes:
      - cache:/data
    expose:
      - 6379

  web:
    container_name: enpitsu_admin
    image: rmecha/enpitsu:main
    restart: always
    environment:
      DATABASE_URL: postgresql://enpitsu:enpitsu@db:5432/enpitsu
      REDIS_URL: redis://:enpitsu@cache:6379/4
      AUTH_URL: https://${ENPITSU_VIRTUAL_HOST}
      AUTH_SECRET: ${ENPITSU_AUTH_SECRET}
      AUTH_GOOGLE_ID: ${ENPITSU_AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${ENPITSU_AUTH_GOOGLE_SECRET}
      CORS_ORIGIN: ${ENPITSU_CORS_ORIGIN}
      SPECIAL_ADMIN_USERS: ${ENPITSU_SPECIAL_ADMIN_USERS}
#     expose:
#       - 3000
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - 3000:3000

  # chibisafe:
  #   image: chibisafe/chibisafe:latest
  #   restart: always
  #   volumes:
  #     - chibisafe_db:/home/node/chibisafe/database:rw
  #     - chibisafe_uploads:/home/node/chibisafe/uploads:rw
  #     - chibisafe_logs:/home/node/chibisafe/logs:rw
  #   expose:
  #     - 8000

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --debug --http-api-update
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    expose:
      - 8080

volumes:
  db:
  cache:
  # chibisafe_db:
  # chibisafe_uploads:
  # chibisafe_logs:
